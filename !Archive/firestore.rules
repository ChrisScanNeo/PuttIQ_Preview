rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Since we're using device IDs without Firebase Auth,
    // we need to allow read/write based on the device ID matching
    
    // Users can read/write their own data (using device ID as user ID)
    match /users/{deviceId} {
      // For now, allow read/write to own document
      // In production, you'd want to verify the device ID somehow
      allow read, write: if true;
      
      // User's profiles subcollection
      match /profiles/{profileId} {
        allow read, write: if true;
      }
    }
    
    // Premium content check (when using device-based auth)
    match /premium/{document=**} {
      // Check if the requesting user has premium status
      // This would need custom implementation since no Firebase Auth
      allow read: if exists(/databases/$(database)/documents/users/$(resource.data.deviceId)) && 
        get(/databases/$(database)/documents/users/$(resource.data.deviceId)).data.isPremium == true;
    }
    
    // Shared metronome templates (read-only for all)
    match /defaultProfiles/{profileId} {
      allow read: if true;
      allow write: if false; // Admin only
    }
  }
}